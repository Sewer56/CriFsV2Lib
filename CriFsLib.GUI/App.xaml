<Application x:Class="CriFsLib.GUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CriFsLib.GUI" 
             xmlns:controls="clr-namespace:Reloaded.WPF.Controls;assembly=Reloaded.WPF">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Reloaded.WPF;component/Resources.xaml"/>

                <!-- This dictionary switches locations between design and runtime -->
                <controls:DesignTimeResourceDictionary RunTimeSource="pack://siteoforigin:,,,/Theme/Default/Root.xaml" DesignTimeSource="pack://application:,,,/Reloaded.WPF.Theme.Default;component/Theme/Default/Root.xaml"/>
            
                <!-- Styles for this application -->
                <ResourceDictionary>
                    
                    <!-- Custom textbox type featuring a placeholder piece of text -->
                    <Style x:Key="TextboxWithPlaceholder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">

                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Grid>

                                        <!-- Top/Bottom Border -->
                                        <Border BorderThickness="{DynamicResource TextboxBorderThickness}" Background="Transparent">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle Stroke="{TemplateBinding Foreground}"
                                                   StrokeThickness="{DynamicResource TextboxBorderStrokeThickness}"
                                                   Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                   Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                        </Border>

                                        <!-- Text host. -->
                                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Focusable="False"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"
                                      Margin="{DynamicResource TextboxContentMargin}"/>

                                        <!-- Block of default text to display if no text in real textbox. -->
                                        <TextBlock IsHitTestVisible="False" 
                                   Text="{TemplateBinding Tag}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Foreground" Value="{DynamicResource BorderColorBrush}"/>
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                    </Grid>
                                    <ControlTemplate.Triggers>

                                        <!-- Change text when unavailable. -->
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Text" Value="{DynamicResource TextboxDisabledSymbol}"/>
                                        </Trigger>

                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
